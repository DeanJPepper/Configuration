[help]
	autocorrect = 20
[push]
	default = current
[alias]
	# view
	st = status --short --branch
	df = diff
	lg = log -n 10 --pretty='%C(bold)%C(red)%h %C(green)%<(6,trunc)%cr %C(cyan)%<(8,trunc)%an %C(white)%s%C(auto)%d'
	lgg = log -n 10 --pretty='%C(bold)%C(red)%h %C(green)%<(6,trunc)%cr %C(cyan)%<(8,trunc)%an %C(white)%s%C(auto)%d' --graph
	br = branch
	bra = branch --all
	ssl = stash list
	
	# start work
	ch = "!f() { git checkout "${1-develop}"; }; f"
	chb = checkout -b
	chg = "!f() { git branch | grep "${1}" --ignore-case | xargs git checkout ; }; f"
	ssa = stash apply
	sspp = stash pop
	
	# stop work
	ad = add .
	rs = reset .
	cm = commit --message
	ssp = stash push --message
	brd = branch --delete
	brdf = branch --delete --force
	
	# re-write history
	rb = "!f() { git rebase --interactive "${1-develop}"; }; f"
	rbc = rebase --continue
	rba = rebase --abort
	mg = "!f() { git merge "${1-develop}"; }; f"
	mgc = merge --continue
	mga = merge --abort
	cp = cherry-pick
	cpn = cherry-pick --no-commit
	cpc = cherry-pick --continue
	cap = cherry-pick --abort
	cma = commit --amend --reset-author
	cman = commit --amend --reset-author --no-edit
	cmf = "!f() { git commit --fixup "${1-head}"; }; f"
	cms = "!f() { git commit --squash "${1-head}"; }; f"
	
	# remote
	ft = fetch --prune
	pl = pull --prune
	ps = push --set-upstream
	psf = push --force-with-lease
